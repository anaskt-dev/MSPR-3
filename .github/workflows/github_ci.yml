name: CI/CD MSPR-3

on:
  push:
    branches:
      - main
      - MSPR3-FIN
  pull_request:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run backend tests
        run: |
          export PYTHONPATH=.
          pytest backend/tests --maxfail=1 --disable-warnings --tb=short

  accessibility-scan:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install streamlit
          pip install -r requirements.txt

      - name: Install Pa11y
        run: |
          npm install -g pa11y

      - name: Start Streamlit frontend
        run: |
          streamlit run frontend/app.py --server.headless true --server.port 8501 &
          sleep 20

      - name: Run Pa11y accessibility scan
        run: |
          pa11y http://localhost:8501 --reporter html > pa11y-report.html || true

      - name: Upload Pa11y report artifact
        uses: actions/upload-artifact@v4
        with:
          name: pa11y-report
          path: pa11y-report.html

  notify-discord:
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      - accessibility-scan
    if: always()
    steps:
      - name: Send Discord Notification
        run: |
          if [ "${{ needs.backend-tests.result }}" == "success" ] && [ "${{ needs.accessibility-scan.result }}" == "success" ]; then
            STATUS="✅ Déploiement CI/CD réussi (tests backend + scan accessibilité)"
          else
            STATUS="❌ CI/CD échoué - Vérifiez les jobs sur GitHub Actions"
          fi

          MESSAGE="**$STATUS**\nRepository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nAuteur: ${{ github.actor }}"

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"$MESSAGE\"}" \
            ${{ secrets.DISCORD_WEBHOOK }}
